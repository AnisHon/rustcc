// 空白字符（不包含注释）
WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
// 注释（单独定义，避免递归问题）
COMMENT = {
    "/*" ~ (!"*/" ~ ANY)* ~ "*/"
  | "//" ~ (!NEWLINE ~ ANY)* ~ (NEWLINE | EOI)
}


// 文件结构
file = { SOI ~ decl_code? ~ decls ~ pattern_decls ~ rules ~ user_code? ~ EOI }

// 声明代码块（%{%} 包裹的内容）
decl_code = { "%{" ~ (!"%}" ~ ANY)* ~ "%}" }

// 选项声明（%option 后跟标识符列表）
decls = { type_decl? ~ ( option_decl | param_decl )* }

option_decl = { "%option" ~ ident ~ (WHITESPACE ~ ident)* }

param_decl = { "%param" ~ "{" ~ param_content ~ "}"}

type_decl = { "%type" ~ ident+ }

param_content = { (!"}" ~ ANY)+ }

pattern_decls = { (pattern_decl)* }

pattern_decl = { ident ~ pattern }

// 规则块（%% 包裹的规则）
rules = { "%%" ~ rule_decl* ~ "%%" }

// 单条规则（模式 + 可选动作）
rule_decl = { pattern ~ action }

// 模式（分为带引号和不带引号两种）
pattern = { quoted_pattern | unquoted_pattern }

// 带引号的模式（"..." 包裹的内容）
quoted_pattern = @{ "\"" ~ (!"\"" ~ (ESCAPED_CHAR | ANY))* ~ "\"" }
ESCAPED_CHAR = @{ "\\" ~ ("\"" | "\\" | "n" | "r" | "t") }

// 不带引号的模式（限制为非动作和非 %% 的内容）
unquoted_pattern = @{ ( !("\r" | "\n" | WHITESPACE ) ~ ANY )+ }

// 动作（{...} 包裹的代码）
action = { "{" ~ (!"}" ~ ANY)* ~ "}" }

// 用户代码（文件末尾的可选代码）
user_code = { (!EOI ~ ANY)* }

// 标识符（首字符为字母或下划线，后续为字母、数字或下划线）
ident = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }